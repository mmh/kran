#!/bin/bash

function kran_logo(){
  cat <<EOF
  Λ
 |X|_______
 |X X_X_X_X'                What else would you
 |X|    _ ¿_                use to handle your
 |X| __| '__|_  _ ___       containers?
 |X|/ /| |/   \| '__ |
 |X| < |_| (_) | | | |
 |X|\_\   \__|_|_| |_|

EOF
}

function kran_usage(){
  cat <<EOF
usage `basename $0`
    up - start container
    build - build docker containers
    ssh - connect to container
    drush, d - execute drush command in container
    clean - kill all containers, and remove them
    init-site [name] - initialize site

EOF
}

function init(){
  export DOCKER_HOST=tcp://localhost:4243
  source ~/.kran/kran.conf

  # find relative directory
  PWD=$(pwd)
  WD=${PWD/$LOCAL_SITES/}
  DIR=${WD#*/}

  #find site from path
  IFS='/' read -ra ADDR <<< "$WD"
  SITE=${ADDR[0]}

  source $LOCAL_SITES$SITE/ports

  if [[ -z $SITE ]]; then
    echo "Couldn't determine site, correct directory?";
    exit 1;
  fi
}

function start(){

# Run mailcatcher
  MAILCATCHER_IS_RUNNING=`netstat -tna | grep 1025 | wc -l`
  if [[ $MAILCATCHER_IS_RUNNING == 0 ]]; then
    mailcatcher --smtp-ip 172.17.42.1
  fi

  echo "Running docker with site $1"
  echo -e "==> http://localhost:"'\e[0;32m'$HTTP'\e[0m'
  echo -e "==> ssh root@localhost -p "'\e[0;32m'$SSH'\e[0m'
  echo ""

  # Check if were running on a mac. If we are, we keep mysql
  # in the vagrant box.
  if [ "$(uname)" == "Darwin" ]; then
    PARAMS="run --rm -t -i -p $HTTP:80 -p $SSH:22 -dns 8.8.8.8\
      -v $SITES$SITE/www:/var/www\
      -v /mnt/sda/lib/mysql:/var/lib/mysql\
     tth/wheezy /opt/start_supervisor_log.sh"
  else
    PARAMS="run --rm -t -i -p $HTTP:80 -p $SSH:22 -dns 8.8.8.8\
      -v $SITES$SITE/www:/var/www\
      -v $SITES$SITE/mysql:/var/lib/mysql\
     tth/wheezy /opt/start_supervisor_log.sh"
  fi
  # Run docker, map directories
  docker $PARAMS
}

function build(){
  cat ~/.ssh/id_rsa.pub > ~/.kran/wheezy/adds/id_rsa.pub;
  cd ~/.kran/wheezy; docker build --rm -t="tth/wheezy" .;
}

function connect_ssh(){
  echo "Connecting to container via ssh"
  echo "root password is root"

  # Remove the old entry for known_hosts (changes on each build)
  ssh-keygen -f "/home/tth/.ssh/known_hosts" -R [localhost]:$SSH > /dev/null 2>&1

  # Dont store knownhosts, dont check
  ssh -o 'UserKnownHostsFile /dev/null' -o 'StrictHostKeyChecking no' -o 'LogLevel=quiet' root@localhost -p $SSH
}

function drush_cmd(){
  ARGS="${@:2}"

  # Remove the old entry for known_hosts (changes on each build)
  ssh-keygen -f "/home/tth/.ssh/known_hosts" -R [localhost]:$SSH > /dev/null 2>&1

  ssh -o 'UserKnownHostsFile /dev/null' -o 'StrictHostKeyChecking no' -o 'LogLevel=quiet' root@localhost -p $SSH "cd /var/$DIR && drush $ARGS"
}

function initalize_site(){
  source ~/.kran/kran.conf
  if [[ -d "$LOCAL_SITES$2" ]]; then
    echo "Site already exists?"
  else
    echo "Initialize site $2"
    echo $LOCAL_SITES$2

    # Create site folders.
    mkdir -p $LOCAL_SITES$2/www
    mkdir -p $LOCAL_SITES$2/www/public_html
    mkdir -p $LOCAL_SITES$2/www/tmp
    mkdir -p $LOCAL_SITES$2/www/logs
    mkdir -p $LOCAL_SITES$2/tmp
    mkdir -p $LOCAL_SITES$2/mysql
    mkdir -p $LOCAL_SITES$2/vhost

    # Add default vhost.
    cp ~/.kran/vhost/000-default $LOCAL_SITES$2/vhost/000-default

    export DOCKER_HOST=tcp://localhost:4243
    source ~/.kran/kran.conf

    # Get latest port.
    source ~/.kran/port.conf

    # Calculate new ports for container and port config.
    NEWPORT=$[PORT+2]
    HTTPPORT=$[PORT+1]
    SSHPORT=$[PORT+2]

    echo "PORT="$NEWPORT > ~/.kran/port.conf
    echo "HTTP="$HTTPPORT > $LOCAL_SITES$2/ports
    echo "SSH="$SSHPORT >> $LOCAL_SITES$2/ports

    # Fire up container and initialize site with db.
    # Check if were running on a mac. If we are, we keep mysql
    # in the vagrant box.
    if [ "$(uname)" == "Darwin" ]; then
      PARAMS="run --rm -t -i -p 10900:80 -p 10901:22 -dns 8.8.8.8\
        -v $SITES$2/www:/var/www\
        -v /mnt/sda/lib/mysql:/var/lib/mysql\
       tth/wheezy /opt/install_db.sh"
    else
      PARAMS="run --rm -t -i -p 10900:80 -p 10901:22 -dns 8.8.8.8\
        -v $SITES$2/www:/var/www\
        -v $SITES$2/mysql:/var/lib/mysql\
       tth/wheezy /opt/install_db.sh"
    fi

    docker $PARAMS
  fi
}

function docker_cleanup(){
  echo "This will kill all active containers, and remove all containers afterwards..."
  read -r -p "Are you sure? [y/N] " RESPONSE
  case $RESPONSE in
    [yY][eE][sS]|[yY] )
      # Kill all containers.
      docker ps -a -q | xargs docker kill
      echo "..."
      # Remove all containers.
      docker ps -a -q | xargs docker rm
      echo "... Done!"
      ;;
    *)
      exit
      ;;
  esac
}

kran_logo

case $1 in
  up) init; start;;
  build) build;;
  ssh) init; connect_ssh;;
  init-site | i) initalize_site $@;;
  drush | d) init; drush_cmd $@;;
  clean) docker_cleanup;;
  *) kran_usage; exit 1;
esac
